paste("story",c(1:10),sep="_")
paste("story",c(1:50),sep="_")
storylib <- paste("story",c(1:50),sep="_")
storiesTagged_A <- sample()
sample(2, storylib)
sample(storylib,2)
?sample
sample(storylib,2,replace=F)
sample(storylib,5,replace=F)
storiesTagged_A <- sample(storylib,5,replace=F)
storylib <- paste("story",c(1:20),sep="_")
storiesTagged_A <- sample(storylib,5,replace=F)
storiesTagged_B <- sample(storylib,3,replace=F)
storiesTagged_C <- sample(storylib,10,replace=F)
storiesTagged_A
storiesTagged_B
storiesTagged_C
match(storiesTagged_B, storiesTagged_C)
storylib
storiesTagged_A
setwd("~/CloudStation/FREELANCE_WORK/1504_BBC/Topic_Models/Text_Analytics")
library(RCurl)
library(XML)
library(jsonlite)
searchstring = "climate"
nr_articles = 50
search <- paste("http://developer:anicca@new.juicer.bbcnewslabs.co.uk/articles?recent_first=true","&q=",searchstring,"&offset=",0,"&size=",nr_articles,sep="")
contentJSON <- getURL(search)
contentDF <- fromJSON(contentJSON)
text <- contentDF$hits$body
library(pca)
install.packages(pcs)
install.packages(pca)
install.packages('pca')
corpus <- Corpus(VectorSource(text))
library(tm)
corpus <- Corpus(VectorSource(text))
corpus <- Corpus(VectorSource(text))
corpus <- tm_map(corpus, removePunctuation)
DTM <- DocumentTermMatrix(corpus, control = list(stemming = TRUE,
stopwords = TRUE,
minWordLength = 3,
removeNumbers = TRUE,
removePunctuation = TRUE))
corpus
text
corpus <- Corpus(VectorSource(text))
corpus
corpus$1
corpus[1]
corpus[1]$1
corpus[[1]]
corpus <- tm_map(corpus, removePunctuation)
corpus[[1]]
DocumentTermMatrix(corpus, control = list(stemming = TRUE,
stopwords = TRUE,
minWordLength = 3,
removeNumbers = TRUE,
removePunctuation = TRUE))
text <- iconv(text,to="utf-8-mac")
corpus <- Corpus(VectorSource(text))
corpus[[1]]
corpus <- tm_map(corpus, removePunctuation)
corpus[[1]]
DTM <- DocumentTermMatrix(corpus, control = list(stemming = TRUE,
stopwords = TRUE,
minWordLength = 3,
removeNumbers = TRUE,
removePunctuation = TRUE))
DTM <- DocumentTermMatrix(corpus)
DTM
DTM[1:10,1:10]
DTM$i
DTM$nrow
DTM$ncol
DTM$dimnames
DTM$i
DTM$j
tdm <- DocumentTermMatrix(corpus)
inspect(tdm[155:160,1:5])
inspect(tdm[1:10,1:5])
?tm_map
corpus <- tm_map(corpus, removeWords, c(stopwords("english"),"my","custom","words"))
corpus[[1]]
corpus <- tm_map(corpus, removeWords, c(stopwords("english"),"Its","custom","words"))
corpus[[1]]
tdm <- DocumentTermMatrix(corpus)
inspect(tdm[1:10,1:5])
